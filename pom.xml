<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<properties>
		<spring.version>5.0.2.RELEASE</spring.version>
		<spring.security.version>5.0.0.RELEASE</spring.security.version>
		<hibernate.version>5.2.12.Final</hibernate.version>
		<aspectj.version>1.8.13</aspectj.version>
		<app.name>myname</app.name>
		<app.version>1.0-SNAPSHOT</app.version>
		<app.releaseNo>4.2.0</app.releaseNo>
		<app.instance.type>Production</app.instance.type>
		<pfapp.repo>${basedir}/lib</pfapp.repo>
		<api.basePath>http://localhost:8080/myname-1.0-SNAPSHOT/api</api.basePath>
		<tika.version>1.15</tika.version>
		<java.version>1.8</java.version>
		<jackson.version>2.9.3</jackson.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>  
	<groupId>com.myname</groupId>
	<artifactId>${app.name}</artifactId>
	<version>${app.version}</version>
	<packaging>war</packaging>
	<name>myname</name>
	<url>http://www.myname.com</url>
	<repositories>
		<repository>
			<id>jcenter-snapshots</id>
			<name>jcenter</name>
			<url>https://jcenter.bintray.com/</url>
		</repository>
		<repository>
			<id>local-id</id>
			<name>Project Repo</name>
			<url>file://${pfapp.repo}</url>
		</repository>
		<repository>
			<id>PentahoRepo</id>
			<name>Pentaho repository</name>
			<url>http://repository.pentaho.org/artifactory/repo</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
		</repository>
		<repository>
			<id>spring-repo</id>
			<name>Spring Repository</name>
			<url>https://repo.spring.io/release</url>
		</repository>
	</repositories>
	<dependencies>
		<!-- Explicitly Adding Dependency Because CORE SAML 1.0.1 is picking old 
			dependency -->
		<!-- https://mvnrepository.com/artifact/xml-apis/xml-apis -->
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>1.4.01</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.mobile</groupId>
			<artifactId>spring-mobile-device</artifactId>
			<version>1.1.4.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.opensaml</groupId>
			<artifactId>opensaml</artifactId>
			<version>2.6.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.extensions</groupId>
			<artifactId>spring-security-saml2-core</artifactId>
			<version>1.0.3.RELEASE</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.ldap</groupId>
			<artifactId>spring-ldap-core</artifactId>
			<version>2.3.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-ldap</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>3.0.7</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.3</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring3</artifactId>
			<version>2.1.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3</version>
		</dependency>
		<!-- quartz -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.1.7</version>
		</dependency>
		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>0.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path-assert</artifactId>
			<version>0.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>kspl</groupId>
			<artifactId>dynamic-extensions</artifactId>
			<version>2.0.8</version>
		</dependency>
		<dependency>
			<groupId>legacy</groupId>
			<artifactId>jep</artifactId>
			<version>2.4.1</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr4-runtime</artifactId>
			<version>4.3</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>2.8.3</version>
		</dependency>
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-digester3</artifactId>
			<version>3.0</version>
		</dependency>
		<!-- Dependency for secure random password generation -->
		<dependency>
			<groupId>org.passay</groupId>
			<artifactId>passay</artifactId>
			<version>1.3.0</version>
		</dependency>
		<!-- Apache Tika: To validate File Content -->
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>${tika.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers</artifactId>
			<version>${tika.version}</version>
		</dependency>
		<dependency>
			<groupId>ua-parser</groupId>
			<artifactId>uaparser</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.0</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.3</version>
			<scope>compile</scope>
		</dependency>
		
		 <dependency>
           <groupId>org.jsoup</groupId>
           <artifactId>jsoup</artifactId>
           <version>1.12.1</version>
        </dependency>
		
		<dependency>
	       <groupId>com.github.wnameless.json</groupId>
	       <artifactId>json-flattener</artifactId>
	       <version>0.8.1</version>
      </dependency>

		<!-- https://mvnrepository.com/artifact/com.warrenstrange/googleauth -->
		<dependency>
			<groupId>com.warrenstrange</groupId>
			<artifactId>googleauth</artifactId>
			<version>1.5.0</version>
		</dependency>


	</dependencies>
	
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<warSourceExcludes>node_modules/**</warSourceExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<instrumentation>
						<excludes>
							<exclude>com/myname/**/*Test.class</exclude>
							<exclude>com/myname/core/aspect/**</exclude>
						</excludes>
					</instrumentation>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.11</version>
				<configuration>
					<showWeaveInfo>false</showWeaveInfo>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<Xlint>ignore</Xlint>
					<complianceLevel>1.8</complianceLevel>
					<encoding>UTF-8</encoding>
					<verbose>false</verbose>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>org.springframework</groupId>
							<artifactId>spring-aspects</artifactId>
						</aspectLibrary>
					</aspectLibraries>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>false</skipTests>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
			<!-- This plugin reads head git commit -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>2.1.12</version>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<dateFormat>dd-MMM-yyyy '@' HH:mm:ss z</dateFormat>
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					<failOnNoGitDirectory>false</failOnNoGitDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>build initiative.xml</id>
						<phase>generate-test-sources</phase>
						<configuration>
							<target name="appendInitiative">
								<replace
									file="${basedir}/target/classes/default-forms/Initiative.xml"
									value="" failOnNoReplacements="false">
									<replacetoken>
                    <![CDATA[<initiativeCustomField/>]]>
									</replacetoken>
								</replace>
								<echo>replace initiativeCustomField with default value</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>build account.xml</id>
						<phase>generate-test-sources</phase>
						<configuration>
							<target name="appendAccount">
								<replace file="${basedir}/target/classes/default-forms/Accounts.xml"
									value="" failOnNoReplacements="false">
									<replacetoken>
                    <![CDATA[<accountCustomField/>]]>
									</replacetoken>
								</replace>
								<echo>replace accountCustomField with default value</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>build engagement.xml</id>
						<phase>generate-test-sources</phase>
						<configuration>
							<target name="appendEgmt">
								<replace
									file="${basedir}/target/classes/default-forms/Engagement.xml"
									value="" failOnNoReplacements="false">
									<replacetoken>
                    <![CDATA[<egmtCustomField/>]]>
									</replacetoken>
								</replace>
								<echo>replace egmtCustomField with default value</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>build opportunity.xml</id>
						<phase>generate-test-sources</phase>
						<configuration>
							<target name="appendOpp">
								<replace
									file="${basedir}/target/classes/default-forms/Opportunity.xml"
									value="" failOnNoReplacements="false">
									<replacetoken>
                    <![CDATA[<oppCustomField/>]]>
									</replacetoken>
								</replace>
								<echo>replace oppCustomField with default value</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>
											properties-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-2,)
										</versionRange>
										<goals>
											<goal>
												read-project-properties
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>appBuildInfo.properties</include>
					<include>swagger.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
	</build>
	
		<profile>
			<id>bamboo</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<version>1.5.2</version>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<goals>
									<goal>replace</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<ignoreMissingFile>true</ignoreMissingFile>
							<file>${basedir}/target/classes/com/myname/applicationContext.xml</file>
							<outputFile>${basedir}/target/classes/com/myname/applicationContext.xml</outputFile>
							<delimiters>
								<delimiter>$${*}</delimiter>
							</delimiters>
							<regex>false</regex>
							<token>dsname</token>
							<value>${app.dsn}</value>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>musigma</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>musigma-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>build accounts.xml</id>
								<phase>process-classes</phase>
								<configuration>
									<target name="appendAccount">
									    <taskdef name="if" classname="net.sf.antcontrib.logic.IfTask"
											classpathref="maven.plugin.classpath" />
										<if>
										  <equals arg1="${nextGenBuild}" arg2="true" />
										  <then>
											<loapfile property="accountCustomField"
											srcFile="${basedir}/../extensions/musigma-plugin/src/main/resources/pf-custom-report-forms/Account_Custom-NextGen.xml" />
										    <replace
											      file="${basedir}/target/classes/nextGen-report-forms/Accounts.xml"
											      value="${accountCustomField}" failOnNoReplacements="false">
											    <replacetoken>
                                                    <![CDATA[<accountCustomField/>]]>
											    </replacetoken>
										    </replace>
										     <echo>accountCustomField data---- ${accountCustomField}- nextGenBuild</echo>
										  </then>
									   
										  <else>
											 <loapfile property="accountCustomField"
										     	srcFile="${basedir}/../extensions/musigma-plugin/src/main/resources/pf-custom-report-forms/Account_Custom.xml" />
											<replace
												file="${basedir}/target/classes/default-forms/Accounts.xml"
												value="${accountCustomField}" failOnNoReplacements="false">
												<replacetoken>
							                        <![CDATA[<accountCustomField/>]]>
												</replacetoken>
											</replace>
										       <echo>Old UI Build accountCustomField data---- ${accountCustomField}</echo>
										  </else>
										</if>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>build Engagement.xml</id>
								<phase>process-classes</phase>
								<configuration>
									<target name="appendEngagement">
									    <taskdef name="if" classname="net.sf.antcontrib.logic.IfTask"
											classpathref="maven.plugin.classpath" />
										<if>
										  <equals arg1="${nextGenBuild}" arg2="true" />
										  <then>
											<loapfile property="egmtCustomField"
											srcFile="${basedir}/../extensions/musigma-plugin/src/main/resources/pf-custom-report-forms/Engagement_Custom-NextGen.xml" />
										    <replace
											    file="${basedir}/target/classes/nextGen-report-forms/Engagement.xml"
											       value="${egmtCustomField}" failOnNoReplacements="false">
											   <replacetoken>
                                                   <![CDATA[<egmtCustomField/>]]>
											   </replacetoken>
										    </replace>
										   <echo>egmtCustomField data---- ${egmtCustomField}</echo>
										  </then>
									   
										  <else>
											  <loapfile property="egmtCustomField"
											   srcFile="${basedir}/../extensions/musigma-plugin/src/main/resources/pf-custom-report-forms/Engagement_Custom.xml" />
										      <replace
											    file="${basedir}/target/classes/default-forms/Engagement.xml"
											       value="${egmtCustomField}" failOnNoReplacements="false">
											   <replacetoken>
                                                   <![CDATA[<egmtCustomField/>]]>
											   </replacetoken>
										      </replace>
										     <echo>Old UI Build egmtCustomField data---- ${egmtCustomField}</echo>
										  </else>
										</if>								
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
										
					<plugin>
					  <groupId>org.apache.maven.plugins</groupId>
					  <artifactId>maven-antrun-plugin</artifactId>
					  <version>1.7</version>
					  <executions>
						<execution>
							  <id>copy SAML Resources</id>
							  <phase>prepare-package</phase>
							  <configuration>
									<target name="copy musigma saml files">
									   <taskdef name="if" classname="net.sf.antcontrib.logic.IfTask"
											classpathref="maven.plugin.classpath" />
										<if>
										  <equals arg1="${environment}" arg2="production" />
										  <then>
											 <copy todir="${basedir}/target/classes/com/myname" overwrite="true">
											   <fileset dir="${basedir}/../extensions/musigma-plugin/manual-config/saml/production"/>
											 </copy>
										  </then>
									   
										  <else>
											  <echo message="Environment is not a production type" />
										  </else>
										</if>
										
										<if>
										  <equals arg1="${environment}" arg2="test" />
										  <then>
											 <copy todir="${basedir}/target/classes/com/myname" overwrite="true">
												 <fileset dir="${basedir}/../extensions/musigma-plugin/manual-config/saml/sandbox"/>
											  </copy>
										  </then>
									   
										  <else>
											 <echo message="Environment is not a test type" />
										  </else>
										</if>
										
									</target>
							  </configuration>
							  <goals>
								  <goal>run</goal>
							  </goals>
						  </execution>
					</executions>
					
					<dependencies>
						 <dependency>
							<groupId>ant-contrib</groupId>
							<artifactId>ant-contrib</artifactId>
							<version>20020829</version>
						 </dependency>
					 </dependencies>
					</plugin>
					
					
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonata</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>pf-sonata-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>build initiative.xml</id>
								<phase>process-classes</phase>
								<configuration>
									<target name="appendInitiative">
										<loapfile property="initiativeCustomField"
											srcFile="${basedir}/../extensions/sonata-plugin/src/main/resources/pf-custom-report-forms/Intiative_Custom.xml" />
										<replace
											file="${basedir}/target/classes/default-forms/Initiative.xml"
											value="${initiativeCustomField}" failOnNoReplacements="false">
											<replacetoken>
                                               <![CDATA[<initiativeCustomField/>]]>
											</replacetoken>
										</replace>
										<echo>initiativeCustomField data---- ${initiativeCustomField}</echo>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					
					 <plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								  <id>copy SAML Resources</id>
								  <phase>prepare-package</phase>
								  <configuration>
										<target name="copy sonata saml files">
										   <taskdef name="if" classname="net.sf.antcontrib.logic.IfTask"
												classpathref="maven.plugin.classpath" />
												
										    
											<if>
											  <equals arg1="${environment}" arg2="production" />
											  <then>
												 <copy todir="${basedir}/target/classes/com/myname" overwrite="true">
												   <fileset dir="${basedir}/../extensions/sonata-plugin/manual-config/saml/production"/>
												 </copy>
											  </then>
										   
											  <else>
												  <echo message="Environment is not a production type" />
											  </else>
											</if>
												
										  <if>
											  <equals arg1="${environment}" arg2="test" />
											  <then>
												 <copy todir="${basedir}/target/classes/com/myname" overwrite="true">
													 <fileset dir="${basedir}/../extensions/sonata-plugin/manual-config/saml/sandbox"/>
												  </copy>
											  </then>
										   
											  <else>
												 <echo message="Environment is not a test type" />
											  </else>
										 </if>
										</target>
								  </configuration>
								  <goals>
									  <goal>run</goal>
								  </goals>
							  </execution>
						</executions>
						
						<dependencies>
							 <dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>20020829</version>
							 </dependency>
						 </dependencies>
					</plugin>
					
				</plugins>
			</build>
		</profile>
		<profile>
			<id>slk</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>slk-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>build engagement.xml</id>
								<phase>process-classes</phase>
								<configuration>
										<target name="appendEgmt">
											<taskdef name="if" classname="net.sf.antcontrib.logic.IfTask"
												classpathref="maven.plugin.classpath" />
											<if>
											  <equals arg1="${nextGenBuild}" arg2="true" />
											  <then>
												<loapfile property="egmtCustomField"
												srcFile="${basedir}/../extensions/slk-plugin/src/main/resources/pf-custom-report-forms/Egmt_Custom.xml" />
												<replace
													file="${basedir}/target/classes/nextGen-report-forms/Engagement.xml"
													   value="${egmtCustomField}" failOnNoReplacements="false">
												   <replacetoken>
													   <![CDATA[<egmtCustomField/>]]>
												   </replacetoken>
												</replace>
											   <echo>egmtCustomField data---- ${egmtCustomField}</echo>
											  </then>
										   
											  <else>
												  <loapfile property="egmtCustomField"
												   srcFile="${basedir}/../extensions/slk-plugin/src/main/resources/pf-custom-report-forms/Egmt_Custom.xml" />
												  <replace
													file="${basedir}/target/classes/default-forms/Engagement.xml"
													   value="${egmtCustomField}" failOnNoReplacements="false">
												   <replacetoken>
													   <![CDATA[<egmtCustomField/>]]>
												   </replacetoken>
												  </replace>
												 <echo>Old UI Build egmtCustomField data---- ${egmtCustomField}</echo>
											  </else>
											</if>								
										</target>
									</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>build opportunity.xml</id>
								<phase>process-classes</phase>
								<configuration>
										<target name="appendOpp">
											<taskdef name="if" classname="net.sf.antcontrib.logic.IfTask"
												classpathref="maven.plugin.classpath" />
											<if>
											  <equals arg1="${nextGenBuild}" arg2="true" />
											  <then>
												<loapfile property="oppCustomField"
												srcFile="${basedir}/../extensions/slk-plugin/src/main/resources/pf-custom-report-forms/Opp_Custom.xml" />
												<replace
													file="${basedir}/target/classes/nextGen-report-forms/Opportunity.xml"
													   value="${oppCustomField}" failOnNoReplacements="false">
												   <replacetoken>
													   <![CDATA[<oppCustomField/>]]>
												   </replacetoken>
												</replace>
											   <echo>oppCustomField data---- ${oppCustomField}</echo>
											  </then>
										   
											  <else>
												  <loapfile property="oppCustomField"
												   srcFile="${basedir}/../extensions/slk-plugin/src/main/resources/pf-custom-report-forms/Opp_Custom.xml" />
												  <replace
													file="${basedir}/target/classes/default-forms/Opportunity.xml"
													   value="${oppCustomField}" failOnNoReplacements="false">
												   <replacetoken>
													   <![CDATA[<oppCustomField/>]]>
												   </replacetoken>
												  </replace>
												 <echo>Old UI Build oppCustomField data---- ${oppCustomField}</echo>
											  </else>
											</if>								
										</target>
									</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						
						<dependencies>
						 <dependency>
							<groupId>ant-contrib</groupId>
							<artifactId>ant-contrib</artifactId>
							<version>20020829</version>
						 </dependency>
					    </dependencies>
						
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>solera</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>solera-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>build opportunity.xml</id>
								<phase>process-classes</phase>
								<configuration>
									<target name="appendOpp">
										<loapfile property="oppCustomField"
											srcFile="${basedir}/../extensions/solera-plugin/src/main/resources/pf-custom-report-forms/Opp_Custom.xml" />
										<replace
											file="${basedir}/target/classes/default-forms/Opportunity.xml"
											value="${oppCustomField}" failOnNoReplacements="false">
											<replacetoken>
                        <![CDATA[<oppCustomField/>]]>
											</replacetoken>
										</replace>
										<echo>oppCustomField data---- ${oppCustomField}</echo>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>605</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>605-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>build engagement.xml</id>
								<phase>process-classes</phase>
								<configuration>
									<target name="appendEgmt">
										<loapfile property="egmtCustomField"
											srcFile="${basedir}/../extensions/605-plugin/src/main/resources/pf-custom-report-forms/Egmt_Custom.xml" />
										<replace
											file="${basedir}/target/classes/default-forms/Engagement.xml"
											value="${egmtCustomField}" failOnNoReplacements="false">
											<replacetoken>
                        <![CDATA[<egmtCustomField/>]]>
											</replacetoken>
										</replace>
										<echo>egmtCustomField data---- ${egmtCustomField}</echo>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>build opportunity.xml</id>
								<phase>process-classes</phase>
								<configuration>
									<target name="appendOpp">
										<loapfile property="oppCustomField"
											srcFile="${basedir}/../extensions/605-plugin/src/main/resources/pf-custom-report-forms/Opp_Custom.xml" />
										<replace
											file="${basedir}/target/classes/default-forms/Opportunity.xml"
											value="${oppCustomField}" failOnNoReplacements="false">
											<replacetoken>
                        <![CDATA[<oppCustomField/>]]>
											</replacetoken>
										</replace>
										<echo>oppCustomField data---- ${oppCustomField}</echo>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>build deal.xml</id>
								<phase>process-classes</phase>
								<configuration>
									<target name="appendDeal">
										<loapfile property="dealCustomField"
											srcFile="${basedir}/../extensions/605-plugin/src/main/resources/pf-custom-report-forms/Deal_Custom.xml" />
										<replace file="${basedir}/target/classes/default-forms/Deals.xml"
											value="${dealCustomField}" failOnNoReplacements="false">
											<replacetoken>
                        <![CDATA[<dealCustomField/>]]>
											</replacetoken>
										</replace>
										<echo>dealCustomField data---- ${dealCustomField}</echo>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							
							<execution>
								<id>build account.xml</id>
								<phase>process-classes</phase>
								<configuration>
									<target name="appendAccount">
										<loapfile property="accountCustomRow"
											srcFile="${basedir}/../extensions/605-plugin/src/main/resources/pf-custom-report-forms/Account_Custom.xml" />
										<replace
											file="${basedir}/target/classes/default-forms/Accounts.xml"
											value="${accountCustomRow}" failOnNoReplacements="false">
											<replacetoken>
                                               <![CDATA[<accountCustomRow/>]]>
											</replacetoken>
										</replace>
										<echo>accountCustomRow data---- ${accountCustomRow}</echo>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>promethean</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>promethean-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
			</build>
		</profile>
		<profile>
			<id>hanuSoftware</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>hanuSoftware-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					 <plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								  <id>copy SAML Resources</id>
								  <phase>prepare-package</phase>
								  <configuration>
										<target name="copy hanu software saml files">
										   <taskdef name="if" classname="net.sf.antcontrib.logic.IfTask"
												classpathref="maven.plugin.classpath" />
																						    
											<if>
											  <equals arg1="${environment}" arg2="production" />
											  <then>
												 <copy todir="${basedir}/target/classes/com/myname" overwrite="true">
												   <fileset dir="${basedir}/../extensions/hanuSoftware-plugin/manual-config/saml/production"/>
												 </copy>
											  </then>
										   
											  <else>
												  <echo message="Environment is not a production type" />
											  </else>
											</if>
										</target>
								  </configuration>
								  <goals>
									  <goal>run</goal>
								  </goals>
							  </execution>
						</executions>
						
						<dependencies>
							 <dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>20020829</version>
							 </dependency>
						 </dependencies>
					</plugin>
					
				</plugins>
			</build>
		</profile>
		<profile>
			<id>kam</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>kam-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
			</build>
		</profile>
		<profile>
			<id>skim</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>skim-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
			</build>
		</profile>
		<profile>
			<id>sintexPlastics</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>sintexPlastics-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
			</build>
		</profile>
		<profile>
			<id>newbuild</id>
			<build>
				<resources>
					<resource>
						<directory>${basedir}/tools/newbuild</directory>
					</resource>
				</resources>
			</build>
		</profile>
		<profile>
			<id>lti</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>lti-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
						  <execution>
								<id>copy SAML Resources</id>
								<phase>prepare-package</phase>
								<configuration>
									  <target name="copy lti saml files">
										 <taskdef name="if" classname="net.sf.antcontrib.logic.IfTask"
											  classpathref="maven.plugin.classpath" />
										  <if>
											<equals arg1="${environment}" arg2="production" />
											<then>
											   <copy todir="${basedir}/target/classes/com/myname" overwrite="true">
												 <fileset dir="${basedir}/../extensions/lti-plugin/manual-config/saml/production"/>
											   </copy>
											</then>
										 
											<else>
												<echo message="Environment is not a production type" />
											</else>
										  </if>
										  
										  <if>
											<equals arg1="${environment}" arg2="test" />
											<then>
											   <copy todir="${basedir}/target/classes/com/myname" overwrite="true">
												   <fileset dir="${basedir}/../extensions/lti-plugin/manual-config/saml/sandbox"/>
												</copy>
											</then>
										 
											<else>
											   <echo message="Environment is not a test type" />
											</else>
										  </if>
										  
									  </target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
					  </executions>
					  
					  <dependencies>
						   <dependency>
							  <groupId>ant-contrib</groupId>
							  <artifactId>ant-contrib</artifactId>
							  <version>20020829</version>
						   </dependency>
					   </dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>techM</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>techM-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
			  <plugins>
					 <plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								  <id>copy SAML Resources</id>
								  <phase>prepare-package</phase>
								  <configuration>
										<target name="copy techM saml files">
										   <taskdef name="if" classname="net.sf.antcontrib.logic.IfTask"
												classpathref="maven.plugin.classpath" />
																						    
											<if>
											  <equals arg1="${environment}" arg2="production" />
											  <then>
												 <copy todir="${basedir}/target/classes/com/myname" overwrite="true">
												   <fileset dir="${basedir}/../extensions/techM-plugin/manual-config/saml/production"/>
												 </copy>
											  </then>
										   
											  <else>
												  <echo message="Environment is not a production type" />
											  </else>
											</if>
										</target>
								  </configuration>
								  <goals>
									  <goal>run</goal>
								  </goals>
							  </execution>
						</executions>
						
						<dependencies>
							 <dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>20020829</version>
							 </dependency>
						 </dependencies>
					</plugin>					
				</plugins>
			</build>
		</profile>
		<profile>
			<id>vinventions</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>vinventions-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
			</build>
		</profile>
		<profile>
			<id>abMauri</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>abMauri-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
			</build>
		</profile>
		<profile>
			<id>modus</id>
			<dependencies>
				<dependency>
					<groupId>plugin</groupId>
					<artifactId>modus-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
			</dependencies>
			<build>
			</build>
		</profile>
	</profiles>
</project>
